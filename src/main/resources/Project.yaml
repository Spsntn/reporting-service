openapi: 3.0.3
info:
  title: Project Service API
  description: API for managing projects.
  version: 1.0.0
paths:
  /api/projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: A list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Create a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects/{id}:
    get:
      summary: Get a project by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
        '500':
          description: Internal server error
    put:
      summary: Update a project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Project updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Project deleted successfully
  /api/projects/{id_project}/departments:
    post:
      summary: Add a department ID to a project
      parameters:
        - name: id_project
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: uuid
      responses:
        '200':
          description: Department ID added to project successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects/{id}/departments/{departmentId}:
    delete:
      summary: Remove the department ID from a project
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Department ID removed from project successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects/by-name:
    get:
      summary: Get a project by name
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Project retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
  /api/projects/by-department/{id_department}:
    get:
      summary: Find projects by department ID
      parameters:
        - name: id_department
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Projects retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        idDepartment:
          type: string
          format: uuid
      required:
        - name
        - description
